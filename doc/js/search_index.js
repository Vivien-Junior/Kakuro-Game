var search_data = {"index":{"searchIndex":["btncase","btncaseindication","btncasejouable","btncasenonjouable","combinaison","crisscross","crossreference","gestionneurtechnique","grille","lonesquare","menuprincipal","object","partie","sauvegarde","score","_dump()","_dump()","_dump()","_load()","_load()","_load()","actiondirection()","affichepopuptechnique()","affichepopuptechnique()","affichepopuptechnique()","affichetechnique()","affichetechnique()","affichetechnique()","affichetoi()","aidevisuelle()","aidevisuelle()","ajoutecssastuce()","ajoutecsserror()","astucestrouvecase()","calcul()","calculscorefinal()","changementgrille()","changerniveau()","charger()","chargerclassement()","chargerclassements()","chargerdifficulte()","chargergrille()","chargermenuprincipal()","chargersauvegarde()","chargerscores()","choixaide()","colorercasesfaciles()","contientbonnereponse?()","correspond?()","correspond?()","correspond?()","creer()","creer()","creer()","creer()","creer()","creer()","creer()","creer()","debuter()","dessinercase()","donnecombinaisons()","donnecombinaisons()","donnemathsbon()","donnetechnique()","estcasenombre?()","estcasenombre?()","estcasevide?()","estcasevide?()","estcorrect()","evidencecaseerreur()","evidencecaseerreurno()","findepartie()","finpartie()","focus()","getlabel()","getlabellarge()","getlabelx()","getlabelxx()","jouable?()","jouable?()","lancetoi()","lancerjeu()","majaidevisuelle()","majbtnoutils()","majcombi()","majcoup()","majtechnique()","malusaide1()","malusaide2()","maluserreur()","marshal_dump()","marshal_load()","mathsbon()","metevidencecaseerreur()","multi()","nbcasescolonne()","nbcasesligne()","nbcasesrempliesh()","nbcasesrempliesv()","nberreurs()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","ondestroy()","ondestroypopup()","recommencerlapartie()","redo()","reinitialisationlistes()","reinitialisescore()","remplirgrille()","resetchrono()","retirecss()","retirecssastuce()","retirecsserror()","retireevidencecaseerreur()","retour()","saisirnom()","setnbcases()","set_label()","startchrono()","stopchrono()","tick()","to_s()","undo()","grille1","grille2","grille3","grille1","grille2","grille3","grille1","grille2","grille3","difficile","facile","global","moyen"],"longSearchIndex":["btncase","btncaseindication","btncasejouable","btncasenonjouable","combinaison","crisscross","crossreference","gestionneurtechnique","grille","lonesquare","menuprincipal","object","partie","sauvegarde","score","btncaseindication#_dump()","btncasejouable#_dump()","btncasenonjouable#_dump()","btncaseindication::_load()","btncasejouable::_load()","btncasenonjouable::_load()","menuprincipal#actiondirection()","crisscross#affichepopuptechnique()","crossreference#affichepopuptechnique()","lonesquare#affichepopuptechnique()","crisscross#affichetechnique()","crossreference#affichetechnique()","lonesquare#affichetechnique()","menuprincipal#affichetoi()","btncaseindication#aidevisuelle()","btncasejouable#aidevisuelle()","btncasejouable#ajoutecssastuce()","btncasejouable#ajoutecsserror()","grille#astucestrouvecase()","combinaison#calcul()","score#calculscorefinal()","menuprincipal#changementgrille()","menuprincipal#changerniveau()","sauvegarde#charger()","menuprincipal#chargerclassement()","menuprincipal#chargerclassements()","menuprincipal#chargerdifficulte()","menuprincipal#chargergrille()","menuprincipal#chargermenuprincipal()","menuprincipal#chargersauvegarde()","sauvegarde#chargerscores()","menuprincipal#choixaide()","btncaseindication#colorercasesfaciles()","btncasejouable#contientbonnereponse?()","crisscross#correspond?()","crossreference#correspond?()","lonesquare#correspond?()","btncase::creer()","btncaseindication::creer()","btncasejouable::creer()","btncasenonjouable::creer()","combinaison::creer()","grille::creer()","partie::creer()","score::creer()","sauvegarde::debuter()","btncaseindication#dessinercase()","btncaseindication#donnecombinaisons()","btncasejouable#donnecombinaisons()","btncasejouable#donnemathsbon()","gestionneurtechnique#donnetechnique()","btncase#estcasenombre?()","btncaseindication#estcasenombre?()","btncase#estcasevide?()","btncasenonjouable#estcasevide?()","grille#estcorrect()","grille#evidencecaseerreur()","grille#evidencecaseerreurno()","partie#findepartie()","menuprincipal#finpartie()","menuprincipal#focus()","object#getlabel()","object#getlabellarge()","object#getlabelx()","object#getlabelxx()","btncase#jouable?()","btncasejouable#jouable?()","menuprincipal#lancetoi()","menuprincipal#lancerjeu()","grille#majaidevisuelle()","menuprincipal#majbtnoutils()","menuprincipal#majcombi()","sauvegarde#majcoup()","gestionneurtechnique#majtechnique()","score#malusaide1()","score#malusaide2()","score#maluserreur()","partie#marshal_dump()","partie#marshal_load()","btncaseindication#mathsbon()","btncasejouable#metevidencecaseerreur()","combinaison#multi()","btncaseindication#nbcasescolonne()","btncaseindication#nbcasesligne()","btncaseindication#nbcasesrempliesh()","btncaseindication#nbcasesrempliesv()","grille#nberreurs()","btncase::new()","btncaseindication::new()","btncasejouable::new()","btncasenonjouable::new()","combinaison::new()","crisscross::new()","crossreference::new()","gestionneurtechnique::new()","grille::new()","lonesquare::new()","menuprincipal::new()","partie::new()","sauvegarde::new()","score::new()","object#ondestroy()","object#ondestroypopup()","menuprincipal#recommencerlapartie()","sauvegarde#redo()","sauvegarde#reinitialisationlistes()","sauvegarde#reinitialisescore()","menuprincipal#remplirgrille()","menuprincipal#resetchrono()","grille#retirecss()","btncasejouable#retirecssastuce()","btncasejouable#retirecsserror()","btncasejouable#retireevidencecaseerreur()","menuprincipal#retour()","menuprincipal#saisirnom()","combinaison#setnbcases()","btncasejouable#set_label()","menuprincipal#startchrono()","menuprincipal#stopchrono()","menuprincipal#tick()","btncaseindication#to_s()","sauvegarde#undo()","","","","","","","","","","","","",""],"info":[["BtnCase","","BtnCase.html","",""],["BtnCaseIndication","","BtnCaseIndication.html","","<p>load (“BtnCase.rb”) load (“../Combinaison.rb”)\n"],["BtnCaseJouable","","BtnCaseJouable.html","","<p>load (“BtnCase.rb”)\n"],["BtnCaseNonJouable","","BtnCaseNonJouable.html","","<p>load (“BtnCase.rb”)\n"],["Combinaison","","Combinaison.html","","<p>classe Combinaison\n<p>Les objets de cette classes sont caractérisés par : la valeur de la case, \nle nombre …\n"],["CrissCross","","CrissCross.html","",""],["CrossReference","","CrossReference.html","",""],["GestionneurTechnique","","GestionneurTechnique.html","","<p>load(“./Techniques/LoneSquare.rb”) load(“./Techniques/CrossReference.rb”)\n"],["Grille","","Grille.html","","<p>Explication des fichiers texte “grille”\n<p>un c veut dire une case simple, donc une case “décor” …\n"],["LoneSquare","","LoneSquare.html","",""],["MenuPrincipal","","MenuPrincipal.html","",""],["Object","","Object.html","",""],["Partie","","Partie.html","","<p>Classe Partie\n\n<pre>Une partie repose sur une grille, une date, son chrono et le score du joueur\n\n* @grille ...</pre>\n"],["Sauvegarde","","Sauvegarde.html","",""],["Score","","Score.html","",""],["_dump","BtnCaseIndication","BtnCaseIndication.html#method-i-_dump","(param)",""],["_dump","BtnCaseJouable","BtnCaseJouable.html#method-i-_dump","(param)",""],["_dump","BtnCaseNonJouable","BtnCaseNonJouable.html#method-i-_dump","(param)",""],["_load","BtnCaseIndication","BtnCaseIndication.html#method-c-_load","(serialized_user)",""],["_load","BtnCaseJouable","BtnCaseJouable.html#method-c-_load","(serialized_user)",""],["_load","BtnCaseNonJouable","BtnCaseNonJouable.html#method-c-_load","(serialized_user)",""],["actionDirection","MenuPrincipal","MenuPrincipal.html#method-i-actionDirection","(nouvCaseCourante)","<p>méthode de déplacement avec les flèches directionnelles\n<p>Paramètres\n<p><code>nouvCaseCourante</code> - instance de la classe …\n"],["affichePopUpTechnique","CrissCross","CrissCross.html#method-i-affichePopUpTechnique","(nom, description, kakuro)","<p>Méthode de afficheTechnique\n"],["affichePopUpTechnique","CrossReference","CrossReference.html#method-i-affichePopUpTechnique","(nom, description, kakuro)","<p>Méthode de afficheTechnique\n"],["affichePopUpTechnique","LoneSquare","LoneSquare.html#method-i-affichePopUpTechnique","(nom, description, kakuro)","<p>Méthode de afficheTechnique\n"],["afficheTechnique","CrissCross","CrissCross.html#method-i-afficheTechnique","(kakuro)","<p>Méthode d&#39;affichage de la technique en PopUp\n"],["afficheTechnique","CrossReference","CrossReference.html#method-i-afficheTechnique","(kakuro)","<p>Méthode d&#39;affichage de la technique en PopUp\n"],["afficheTechnique","LoneSquare","LoneSquare.html#method-i-afficheTechnique","(kakuro)","<p>Méthode d&#39;affichage de la technique en PopUp\n"],["afficheToi","MenuPrincipal","MenuPrincipal.html#method-i-afficheToi","()","<p>Méthode d&#39;affichage\n<p>Exemples\n\n<pre class=\"ruby\"><span class=\"ruby-comment\">#on affiche tout</span>\n <span class=\"ruby-identifier\">afficheToi</span>()\n</pre>\n"],["aideVisuelle","BtnCaseIndication","BtnCaseIndication.html#method-i-aideVisuelle","(tabCase, vertical, horizontal)","<p>Méthode permettant d&#39;activer l&#39;aide visuelle\n<p>Paramètres\n<p><code>tabCase</code> - la grille de jeu\n"],["aideVisuelle","BtnCaseJouable","BtnCaseJouable.html#method-i-aideVisuelle","(tabCase)","<p>Méthode qui permet de demander aux cases d&#39;indication de lancer\nl&#39;aide visuelle sur la ligne …\n"],["ajouteCSSAstuce","BtnCaseJouable","BtnCaseJouable.html#method-i-ajouteCSSAstuce","()","<p>Méthode qui permet d&#39;ajouter le css des astuces sur la ligne ou la\ncolonne de cases jouables dans …\n"],["ajouteCSSError","BtnCaseJouable","BtnCaseJouable.html#method-i-ajouteCSSError","()","<p>Méthode qui permet d&#39;ajouter un css d&#39;erreur\n"],["astucesTrouveCase","Grille","Grille.html#method-i-astucesTrouveCase","()","<p>Méthode de recherche de la case la plus facile à remplir\n"],["calcul","Combinaison","Combinaison.html#method-i-calcul","(tabVal)","<p>Méthode d&#39;instance calcul\n<p>Permet de calculer toutes les combinaisons possibles pour une valeur et …\n"],["calculScoreFinal","Score","Score.html#method-i-calculScoreFinal","(chrono)","<p>Méthode de calcul d&#39;un Score\n<p>Paramètres\n<p><strong>difficulte</strong> =&gt; le nombre de secondes pour finir la\npartie …\n"],["changementGrille","MenuPrincipal","MenuPrincipal.html#method-i-changementGrille","(uneGrille)","<p>change la grille selon que l&#39;on fasse un undo ou un redo\n<p>paramètres\n<p><code>uneGrille</code> - une grille qui servira …\n"],["changerNiveau","MenuPrincipal","MenuPrincipal.html#method-i-changerNiveau","(presentation,difficulte)","<p>passer sur la fênetre de changement de niveau (1, 2, 3…)\n<p>Paramètres\n<p><code>presentation</code> - conteneur de la fenetre …\n"],["charger","Sauvegarde","Sauvegarde.html#method-i-charger","(nomFichier)","<p>Méthode qui, à partir d&#39;un nom de fichier passé en paramètre, récupère\nla sauvegarde correspondante …\n"],["chargerClassement","MenuPrincipal","MenuPrincipal.html#method-i-chargerClassement","(presentation)","<p>méthode d&#39;accès au classement\n<p>Paramètres\n<p><code>presentation</code> - conteneur de la fenetre précedente\n"],["chargerClassements","MenuPrincipal","MenuPrincipal.html#method-i-chargerClassements","(presentation,difficulte)","<p>méthode d&#39;accès au classement\n<p>Paramètres\n<p><code>presentation</code> - conteneur de la fenetre précedente\n"],["chargerDifficulte","MenuPrincipal","MenuPrincipal.html#method-i-chargerDifficulte","(presentation, partie)","<p>passer sur la fênetre de choix de difficulte (facile, medium, difficile)\n<p>Paramètres\n<p><code>presentation</code> - conteneur …\n"],["chargerGrille","MenuPrincipal","MenuPrincipal.html#method-i-chargerGrille","(grilleGtk)","<p>remplissage de la grille de jeu à partir d&#39;une grille d&#39;un fichier\ndéjà existant\n<p>paramètres\n<p><code>grilleGtk</code> …\n"],["chargerMenuPrincipal","MenuPrincipal","MenuPrincipal.html#method-i-chargerMenuPrincipal","()","<p>changer le menu principal\n<p>Exemples\n\n<pre>    #Lancement du jeu\nmp = MenuPrincipal.new\nmp.chargerMenuPrincipal ...</pre>\n"],["chargerSauvegarde","MenuPrincipal","MenuPrincipal.html#method-i-chargerSauvegarde","(presentation)","<p>méthode de chargement de la liste de toutes les sauvegardes disponible,\nnécessite qu&#39;une instance …\n"],["chargerScores","Sauvegarde","Sauvegarde.html#method-i-chargerScores","(difficulte)","<p>Méthode qui récupère la liste des scores et l&#39;affiche faire un algo qui\nfait un classement par rapport …\n"],["choixAide","MenuPrincipal","MenuPrincipal.html#method-i-choixAide","(presCopie,niveau,difficulte)","<p>fenetre pop up du choix d&#39;affichage des aides visuelles ou non @return\ntrue si les aides visuelles …\n"],["colorerCasesFaciles","BtnCaseIndication","BtnCaseIndication.html#method-i-colorerCasesFaciles","(tabCase, sens)","<p>Méthode qui permet de colorier la ligne ou la colonne\n<p>Paramètres\n<p><code>tabCase</code> - la grille de jeu\n"],["contientBonneReponse?","BtnCaseJouable","BtnCaseJouable.html#method-i-contientBonneReponse-3F","()","<p>Méthode qui permet de vérifier si la case contient la bonne réponse\n"],["correspond?","CrissCross","CrissCross.html#method-i-correspond-3F","(caseIndication, tabCase)","<p>Methode qui permet de vérifier si la technique correspond au contexte de la\ncase nombre\n<p>Paramètres\n<p><code>caseIndication</code> …\n"],["correspond?","CrossReference","CrossReference.html#method-i-correspond-3F","(caseIndication, tabCase)","<p>Methode qui permet de vérifier si la technique correspond au contexte de la\ncase nombre\n<p>Paramètres\n<p><code>caseIndication</code> …\n"],["correspond?","LoneSquare","LoneSquare.html#method-i-correspond-3F","(caseIndication, tabCase)","<p>Methode qui permet de vérifier si la technique correspond au contexte de la\ncase nombre\n<p>Paramètres\n<p><code>caseIndication</code> …\n"],["creer","BtnCase","BtnCase.html#method-c-creer","(ligne, colonne)","<p>Méthode de création d&#39;un bouton case\n<p>Paramètres\n<p><code>ligne</code> - la ligne de la case\n"],["creer","BtnCaseIndication","BtnCaseIndication.html#method-c-creer","(ligne, colonne, horizontal, vertical)","<p>Méthode de création d&#39;un bouton case indication\n<p>Paramètres\n<p><code>ligne</code> - la ligne de la case\n"],["creer","BtnCaseJouable","BtnCaseJouable.html#method-c-creer","(ligne, colonne, valeurCorrecte, saisieUtilisateur)","<p>Méthode de création d&#39;un bouton case jouable\n<p>Paramètres\n<p><code>ligne</code> - la ligne de la case\n"],["creer","BtnCaseNonJouable","BtnCaseNonJouable.html#method-c-creer","(ligne, colonne)","<p>Méthode de création d&#39;un bouton case non jouable\n<p>Paramètres\n<p><code>ligne</code> - la ligne de la case\n"],["creer","Combinaison","Combinaison.html#method-c-creer","(val,nbCases)","<p>redéfinition du initialize pour une meilleure compréhension au niveau du\ncode\n"],["creer","Grille","Grille.html#method-c-creer","(strFichier)","<p>Méthode de création d&#39;une grille\n<p>Paramètres\n<p><code>strFichier</code> - le nom du fichier\n"],["creer","Partie","Partie.html#method-c-creer","(nomJoueur,niveau,difficulte)","<p>Méthode d&#39;instance, initialise les objets qui caractérisent la partie\n<p>Paramètres\n<p>nomJoueur =&gt; le …\n"],["creer","Score","Score.html#method-c-creer","(difficulte, aide)","<p>Méthode de création d&#39;un Score\n<p>Paramètres\n<p><strong>difficulte</strong> =&gt; le niveau de difficulte\n<strong>aide</strong> =&gt; booleen …\n"],["debuter","Sauvegarde","Sauvegarde.html#method-c-debuter","()","<p>constructeur\n"],["dessinerCase","BtnCaseIndication","BtnCaseIndication.html#method-i-dessinerCase","(horizontal, vertical)","<p>Méthode permettant de dessiner dans la case\n<p>Paramètres\n<p><code>horizontal</code> - la valeur à indiquer en ligne\n"],["donneCombinaisons","BtnCaseIndication","BtnCaseIndication.html#method-i-donneCombinaisons","(tabCase, jeu, bool)","<p>Méthode servant à de donner leurs combinaisons en ligne et en colonne\n<p>Paramètres\n<p><code>tabCase</code> - la grille de …\n"],["donneCombinaisons","BtnCaseJouable","BtnCaseJouable.html#method-i-donneCombinaisons","(tabCase, jeu)","<p>Méthode qui permet de demander aux cases d&#39;indication de donner leurs\ncombinaisons\n<p>Paramètres\n<p><code>tabCase</code> …\n"],["donneMathsBon","BtnCaseJouable","BtnCaseJouable.html#method-i-donneMathsBon","(tabCase)","<p>Méthode qui permet de trouver les deux caseNombre associées à la case où\nl&#39;utilisateur a mis son …\n"],["donneTechnique","GestionneurTechnique","GestionneurTechnique.html#method-i-donneTechnique","(caseIndication, tabCase, kakuro)","<p>Méthode qui donne une des techniques en fonction du contexte\n<p>Paramètres\n<p><code>caseIndication</code> - la caseIndication …\n"],["estCaseNombre?","BtnCase","BtnCase.html#method-i-estCaseNombre-3F","()","<p>Méthode qui vérifie que la case donne des indications\n"],["estCaseNombre?","BtnCaseIndication","BtnCaseIndication.html#method-i-estCaseNombre-3F","()","<p>Redéfinition de la méthode estCaseNombre?\n"],["estCaseVide?","BtnCase","BtnCase.html#method-i-estCaseVide-3F","()","<p>Méthode qui vérifie que la case n&#39;est pas jouable\n"],["estCaseVide?","BtnCaseNonJouable","BtnCaseNonJouable.html#method-i-estCaseVide-3F","()","<p>Redefinition de la méthode estCaseVide?\n"],["estCorrect","Grille","Grille.html#method-i-estCorrect","()","<p>Méthode qui renvoie si la grille est correct ou non (true si correct, false\nsinon)\n"],["evidenceCaseErreur","Grille","Grille.html#method-i-evidenceCaseErreur","()","<p>Méthode pour mettre en évidence les erreurs de la grille\n"],["evidenceCaseErreurNo","Grille","Grille.html#method-i-evidenceCaseErreurNo","()","<p>Méthode pour retirer l&#39;évidence les erreurs de la grille\n"],["finDePartie","Partie","Partie.html#method-i-finDePartie","()","<p>Méthode qui sauvegarde le score du joueur et son nom dans le fichier\nclassement.txt\n"],["finPartie","MenuPrincipal","MenuPrincipal.html#method-i-finPartie","()","<p>PopUp de fin de partie\n<p>Exemples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">finPartie</span>()\n</pre>\n"],["focus","MenuPrincipal","MenuPrincipal.html#method-i-focus","(conteneurCentral, grille)","<p>Méthode de focus\n<p>Paramètres\n<p><code>conteneurCentral</code> - conteneur de la fenetre de jeu\n"],["getLabel","Object","Object.html#method-i-getLabel","(label)","<p>Crée et renvoie le nom du jeu en taille xx-large\n<p>Paramètres\n<p><code>label</code> - le nom du jeu\n"],["getLabelLarge","Object","Object.html#method-i-getLabelLarge","(label)","<p>Crée et renvoie un label de taille large\n<p>Paramètres\n<p><code>label</code> - le texte du label\n"],["getLabelX","Object","Object.html#method-i-getLabelX","(label, italic)","<p>Crée et renvoie un label de taille x-large\n<p>Paramètres\n<p><code>label</code> - le texte du label\n"],["getLabelXX","Object","Object.html#method-i-getLabelXX","(label)","<p>Crée et renvoie un label de taille xx-large\n<p>Paramètres\n<p><code>label</code> - le texte du label\n"],["jouable?","BtnCase","BtnCase.html#method-i-jouable-3F","()","<p>Méthode qui vérifie que la case est jouable\n"],["jouable?","BtnCaseJouable","BtnCaseJouable.html#method-i-jouable-3F","()","<p>Redefinition de la méthode jouable?\n"],["lanceToi","MenuPrincipal","MenuPrincipal.html#method-i-lanceToi","()","<p>Méthode qui permet de lancer la fenêtre\n<p>Exemples\n\n<pre>#Lancement du jeu\nmp = MenuPrincipal.new\nmp.chargerMenuPrincipal ...</pre>\n"],["lancerJeu","MenuPrincipal","MenuPrincipal.html#method-i-lancerJeu","(presentation,fichier)","<p>méthode de lancement de jeu\n<p>Paramètres\n<p><code>presentation</code> - conteneur de la fenetre précedente\n"],["majAideVisuelle","Grille","Grille.html#method-i-majAideVisuelle","()","<p>Méthode de mis à jour de l&#39;aide visuelle sur la grille\n"],["majBtnOutils","MenuPrincipal","MenuPrincipal.html#method-i-majBtnOutils","()","<p>mise à jour des outils selon que le crayon soit activé ou non\n<p>Exemples\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">majBtnOutils</span>\n</pre>\n"],["majCombi","MenuPrincipal","MenuPrincipal.html#method-i-majCombi","(vertical, horizontal)","<p>mise à jour des combinaisons pour une case donnée\n<p>paramètres\n<p><code>vertical</code> - booleen\n"],["majCoup","Sauvegarde","Sauvegarde.html#method-i-majCoup","(lagrille)","<p>Met à jour le tableau des états de la grille au fur et à mesure prend en\nparamètre la partie qui contient …\n"],["majTechnique","GestionneurTechnique","GestionneurTechnique.html#method-i-majTechnique","(grille)","<p>Méthode qui met à jour des cases indication : cliquable si des techniques\ncorrespondent au contexte, …\n"],["malusAide1","Score","Score.html#method-i-malusAide1","()","<p>Méthode pour retirer le malus du premier niveau d&#39;aide au score\n"],["malusAide2","Score","Score.html#method-i-malusAide2","()","<p>Méthode pour retirer le malus de l&#39;aide technique\n"],["malusErreur","Score","Score.html#method-i-malusErreur","()","<p>Méthode pour retirer le malus de l&#39;aide technique\n"],["marshal_dump","Partie","Partie.html#method-i-marshal_dump","(file)","<p>Effectue  sauvegarde de la partie avec tous ses objets\n<p>Paramètres\n<p>file =&gt; le fichier\n"],["marshal_load","Partie","Partie.html#method-i-marshal_load","(tabDonnees)","<p>Sert à sauvegarder, dans l&#39;ordre, chaque objet dans le fichier binaire\nde sauvegarde\n"],["mathsBon","BtnCaseIndication","BtnCaseIndication.html#method-i-mathsBon","(tabCase)","<p>Méthode qui vérifie que la somme des cases de la ligne ou de la colonne est\nbonne\n<p>Paramètres\n<p><code>tabCase</code> - …\n"],["metEvidenceCaseErreur","BtnCaseJouable","BtnCaseJouable.html#method-i-metEvidenceCaseErreur","()","<p>Méthode pour mettre en évidence les cases pas bonnes\n"],["multi","Combinaison","Combinaison.html#method-i-multi","(x,y,value)","<p>Méthode d&#39;instance multi\n<p>Permet d&#39;initialiser un tableau multidimensionnel (Le tableau va nous …\n"],["nbCasesColonne","BtnCaseIndication","BtnCaseIndication.html#method-i-nbCasesColonne","(tabCase)","<p>Méthode qui calcule le nombre de cases en colonne à remplir\n<p>Paramètres\n<p><code>tabCase</code> - la grille de jeu\n"],["nbCasesLigne","BtnCaseIndication","BtnCaseIndication.html#method-i-nbCasesLigne","(tabCase)","<p>Méthode qui calcule le nombre de cases en ligne à remplir\n<p>Paramètres\n<p><code>tabCase</code> - la grille de jeu\n"],["nbCasesRempliesH","BtnCaseIndication","BtnCaseIndication.html#method-i-nbCasesRempliesH","(tabCase)","<p>Méthode qui calcule le nombre de cases déjà remplies en ligne\n<p>Paramètres\n<p><code>tabCase</code> - la grille de jeu\n"],["nbCasesRempliesV","BtnCaseIndication","BtnCaseIndication.html#method-i-nbCasesRempliesV","(tabCase)","<p>Méthode qui calcule le nombre de cases déjà remplies en colonne\n<p>Paramètres\n<p><code>tabCase</code> - la grille de jeu\n"],["nbErreurs","Grille","Grille.html#method-i-nbErreurs","()","<p>Méthode qui calcule le nombre d&#39;erreurs et demande au jeu de\nl&#39;afficher\n<p>Paramètres\n<p><code>jeu</code> - le jeu …\n"],["new","BtnCase","BtnCase.html#method-c-new","(ligne, colonne)","<p>Méthode d&#39;initialisation d&#39;un bouton case\n<p>Paramètres\n<p><code>ligne</code> - la ligne de la case\n"],["new","BtnCaseIndication","BtnCaseIndication.html#method-c-new","(ligne, colonne, horizontal, vertical)","<p>Méthode d&#39;initialisation d&#39;un bouton case indication\n<p>Paramètres\n<p><code>ligne</code> - la ligne de la case\n"],["new","BtnCaseJouable","BtnCaseJouable.html#method-c-new","(ligne, colonne, valeurCorrecte, saisieUtilisateur)","<p>Méthode d&#39;initialisation d&#39;un bouton case jouable\n<p>Paramètres\n<p><code>ligne</code> - la ligne de la case\n"],["new","BtnCaseNonJouable","BtnCaseNonJouable.html#method-c-new","(ligne, colonne)","<p>Méthode d&#39;initialisation d&#39;un bouton case non jouable\n<p>Paramètres\n<p><code>ligne</code> - la ligne de la case\n"],["new","Combinaison","Combinaison.html#method-c-new","(val,nbCases)","<p>Méthode d&#39;instance init()\n<p>Initialise une liste de combinaison pour une valeur et un nombre de cases …\n"],["new","CrissCross","CrissCross.html#method-c-new","()","<p>Méthode d&#39;initialisation de la classe CrissCross\n"],["new","CrossReference","CrossReference.html#method-c-new","()","<p>Méthode d&#39;initialisation de la classe CrossReference\n"],["new","GestionneurTechnique","GestionneurTechnique.html#method-c-new","()","<p>Méthode d&#39;initialisation de la classe GestionneurTechnique\n"],["new","Grille","Grille.html#method-c-new","(strFichier)","<p>Méthode d&#39;initialisation d&#39;une grille\n<p>Paramètres\n<p><code>strFichier</code> - le nom du fichier\n"],["new","LoneSquare","LoneSquare.html#method-c-new","()","<p>Méthode d&#39;initialisation de la classe LoneSquare\n"],["new","MenuPrincipal","MenuPrincipal.html#method-c-new","()","<p>Les éléments de cette classe sont caractérisés par :\n<p>@kakuro =&gt; la fenêtre du jeu\n<p>@tableauCaseVide =&gt; …\n"],["new","Partie","Partie.html#method-c-new","(nomJoueur,niveau,difficulte)",""],["new","Sauvegarde","Sauvegarde.html#method-c-new","()",""],["new","Score","Score.html#method-c-new","(difficulte, aide)","<p>Méthode d&#39;initialisation d&#39;un Score\n<p>Paramètres\n<p><strong>difficulte</strong> =&gt; le niveau de difficulte\n<strong>aide</strong> =&gt; …\n"],["onDestroy","Object","Object.html#method-i-onDestroy","()","<p>Méthode de destruction basique de la fenêtre de jeu\n"],["onDestroyPopUp","Object","Object.html#method-i-onDestroyPopUp","(kakuro)","<p>Méthode destruction de la fenetre de jeu : demande à l&#39;utilisateur\ns&#39;il est sûr de vouloir quitter …\n"],["recommencerLaPartie","MenuPrincipal","MenuPrincipal.html#method-i-recommencerLaPartie","()","<p>Méthode pour recommencer la partie\n<p>Exemples\n\n<pre>@recommencerPartie = Button.new().set_label(&quot;Recommencer la ...</pre>\n"],["redo","Sauvegarde","Sauvegarde.html#method-i-redo","()","<p>Redo: Permet de rejouer un coup vers l&#39;avant\n<p>Exemples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">sauv</span> = <span class=\"ruby-constant\">Sauvegarde</span>.<span class=\"ruby-identifier\">debuter</span> ()\n<span class=\"ruby-identifier\">sauv</span>.<span class=\"ruby-identifier\">redo</span>()\n</pre>\n"],["reinitialisationListes","Sauvegarde","Sauvegarde.html#method-i-reinitialisationListes","()","<p>methode de reinitialisation des tableaux de undo/redo utilisée lorsque\nl&#39;on recommence la partie …\n"],["reinitialiseScore","Sauvegarde","Sauvegarde.html#method-i-reinitialiseScore","(difficulte)","<p>Méthode de reinitialisation des scores\n"],["remplirGrille","MenuPrincipal","MenuPrincipal.html#method-i-remplirGrille","(grilleGtk,nomGrille)","<p>remplissage de la grille de jeu à partie du fichier passé en paramètre\n<p>paramètres\n<p><code>grilleGtk</code> - table à laquelle …\n"],["resetChrono","MenuPrincipal","MenuPrincipal.html#method-i-resetChrono","()","<p>Méthode de reinitialisation du chrono\n<p>Exemples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">resetChrono</span>\n</pre>\n"],["retireCSS","Grille","Grille.html#method-i-retireCSS","()","<p>Méthode qui permet de parcourir la grille et de retirer les css\nd&#39;astuces\n"],["retireCSSAstuce","BtnCaseJouable","BtnCaseJouable.html#method-i-retireCSSAstuce","()","<p>Méthode qui permet de retirer le css des astuces sur la ligne ou la colonne\nde cases jouables dans la …\n"],["retireCSSError","BtnCaseJouable","BtnCaseJouable.html#method-i-retireCSSError","()","<p>Méthode qui permet de retirer un css d&#39;erreur\n"],["retireEvidenceCaseErreur","BtnCaseJouable","BtnCaseJouable.html#method-i-retireEvidenceCaseErreur","()","<p>Méthode pour retirer les évidences des cases pas bonnes\n"],["retour","MenuPrincipal","MenuPrincipal.html#method-i-retour","(oldTable,newTable)","<p>Méthode de changement de niveau d&#39;affichage\n<p>paramètres\n<p><code>oldTable</code> - ancienne table à supprimer de l&#39;interface …\n"],["saisirNom","MenuPrincipal","MenuPrincipal.html#method-i-saisirNom","(presentation)","<p>passer sur la fênetre de saisie du nom de l&#39;utilisateur\n<p>Paramètres\n<p><code>presentation</code> - conteneur de la fenetre …\n"],["setNbCases","Combinaison","Combinaison.html#method-i-setNbCases","(nC)","<p>Méthode d&#39;instance setNC\n<p>Permet de définir le nombre de cases pour effectuer la somme Prend le\nnombre …\n"],["set_label","BtnCaseJouable","BtnCaseJouable.html#method-i-set_label","(s)","<p>Redefinition de la méthode set_label\n<p>Paramètres\n<p><code>s</code> - le label, la saisie de l&#39;utilisateur\n"],["startChrono","MenuPrincipal","MenuPrincipal.html#method-i-startChrono","()","<p>Méthode de lancement du chrono\n<p>Exemples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">startChrono</span>\n</pre>\n"],["stopChrono","MenuPrincipal","MenuPrincipal.html#method-i-stopChrono","()","<p>Méthode d&#39;arrêt du chrono\n<p>Exemples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">stopChrono</span>\n</pre>\n"],["tick","MenuPrincipal","MenuPrincipal.html#method-i-tick","()","<p>coup d&#39;horloge\n<p>Exemples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">tick</span> <span class=\"ruby-keyword\">unless</span> <span class=\"ruby-ivar\">@timer_stopped</span>\n</pre>\n"],["to_s","BtnCaseIndication","BtnCaseIndication.html#method-i-to_s","()","<p>Redefinition de la fonction to_s\n"],["undo","Sauvegarde","Sauvegarde.html#method-i-undo","()","<p>Undo : Permet de rejouer un coup vers l&#39;arrière\n<p>Exemples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">sauv</span> = <span class=\"ruby-constant\">Sauvegarde</span>.<span class=\"ruby-identifier\">debuter</span> ()\n<span class=\"ruby-identifier\">sauv</span>.<span class=\"ruby-identifier\">undo</span>()\n</pre>\n"],["grille1","","Sources/Grilles/difficile/grille1.html","","<p>c       c       n/38/0  n/7/0   c       c       c       c\n<p>c       n/6/8   v/7     v/1     n/16/0  …\n"],["grille2","","Sources/Grilles/difficile/grille2.html","","<p>c       n/24/0  n/28/0  c       n/16/0  n/4/0   n/42/0  c\n<p>n/0/16  v/9     v/7     n/7/13  v/9     …\n"],["grille3","","Sources/Grilles/difficile/grille3.html","","<p>c       c       n/42/0  n/17/0  c       n/24/0  n/42/0  c\n<p>c       n/0/12  v/4     v/8     n/4/15  …\n"],["grille1","","Sources/Grilles/facile/grille1.html","","<p>c       c       c       c       n/4/0   n/17/0  n/34/0  c\n<p>c       c       c       n/6/13  v/1     …\n"],["grille2","","Sources/Grilles/facile/grille2.html","","<p>c       c       n/34/0  n/17/0  n/3/0   c       c       c\n<p>c       n/0/17  v/7     v/9     v/1     …\n"],["grille3","","Sources/Grilles/facile/grille3.html","","<p>c       n/7/0   n/17/0  c       c       c       c       c\n<p>n/0/9   v/1     v/8     n/13/0  c       …\n"],["grille1","","Sources/Grilles/moyen/grille1.html","","<p>c       c       n/10/0  n/3/0   c       c       c       c\n<p>c       n/0/3   v/1     v/2     n/17/0  …\n"],["grille2","","Sources/Grilles/moyen/grille2.html","","<p>c       c       c       c       n/23/0  n/4/0   n/11/0  c\n<p>c       c       c       n/24/11 v/8     …\n"],["grille3","","Sources/Grilles/moyen/grille3.html","","<p>c       c       n/28/0  n/4/0   n/3/0   c       n/41/0  n/3/0\n<p>c       n/0/10  v/7     v/1     v/2     …\n"],["difficile","","classement/difficile_txt.html","",""],["facile","","classement/facile_txt.html","",""],["global","","classement/global_txt.html","",""],["moyen","","classement/moyen_txt.html","",""]]}}